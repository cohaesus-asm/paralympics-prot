// Defines services and types for handling article previewing

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: articles/v1/preview.proto

package preview

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for [AuthorizeToken][articles.preview.PreviewAuthorizer.AuthorizeToken]
type AuthorizeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token to authorize
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthorizeTokenRequest) Reset() {
	*x = AuthorizeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_articles_v1_preview_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeTokenRequest) ProtoMessage() {}

func (x *AuthorizeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_articles_v1_preview_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeTokenRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeTokenRequest) Descriptor() ([]byte, []int) {
	return file_articles_v1_preview_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizeTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Request for [GenerateToken][articles.preview.PreviewTokenGenerator.GenerateToken]
type GenerateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// article id to generate a token for
	Article string `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	// durration the token should last for in seconds
	Seconds uint64 `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *GenerateTokenRequest) Reset() {
	*x = GenerateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_articles_v1_preview_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRequest) ProtoMessage() {}

func (x *GenerateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_articles_v1_preview_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateTokenRequest) Descriptor() ([]byte, []int) {
	return file_articles_v1_preview_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateTokenRequest) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

func (x *GenerateTokenRequest) GetSeconds() uint64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

// Response for [GenerateToken][articles.preview.PreviewTokenGenerator.GenerateToken]
type GenerateTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// url safe jwt token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GenerateTokenResponse) Reset() {
	*x = GenerateTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_articles_v1_preview_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenResponse) ProtoMessage() {}

func (x *GenerateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_articles_v1_preview_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateTokenResponse) Descriptor() ([]byte, []int) {
	return file_articles_v1_preview_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_articles_v1_preview_proto protoreflect.FileDescriptor

var file_articles_v1_preview_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2d, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x15,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x6f, 0x0a, 0x11, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x12, 0x5a, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2e, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x89, 0x01, 0x0a,
	0x15, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79,
	0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79, 0x6d,
	0x70, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x6f, 0x2e, 0x73,
	0x6f, 0x6f, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x70, 0x61, 0x2f, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2d, 0x67,
	0x6f, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_articles_v1_preview_proto_rawDescOnce sync.Once
	file_articles_v1_preview_proto_rawDescData = file_articles_v1_preview_proto_rawDesc
)

func file_articles_v1_preview_proto_rawDescGZIP() []byte {
	file_articles_v1_preview_proto_rawDescOnce.Do(func() {
		file_articles_v1_preview_proto_rawDescData = protoimpl.X.CompressGZIP(file_articles_v1_preview_proto_rawDescData)
	})
	return file_articles_v1_preview_proto_rawDescData
}

var file_articles_v1_preview_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_articles_v1_preview_proto_goTypes = []interface{}{
	(*AuthorizeTokenRequest)(nil), // 0: paralympics.articles.v1.AuthorizeTokenRequest
	(*GenerateTokenRequest)(nil),  // 1: paralympics.articles.v1.GenerateTokenRequest
	(*GenerateTokenResponse)(nil), // 2: paralympics.articles.v1.GenerateTokenResponse
	(*empty.Empty)(nil),           // 3: google.protobuf.Empty
}
var file_articles_v1_preview_proto_depIdxs = []int32{
	0, // 0: paralympics.articles.v1.PreviewAuthorizer.AuthorizeToken:input_type -> paralympics.articles.v1.AuthorizeTokenRequest
	1, // 1: paralympics.articles.v1.PreviewTokenGenerator.GenerateToken:input_type -> paralympics.articles.v1.GenerateTokenRequest
	3, // 2: paralympics.articles.v1.PreviewAuthorizer.AuthorizeToken:output_type -> google.protobuf.Empty
	2, // 3: paralympics.articles.v1.PreviewTokenGenerator.GenerateToken:output_type -> paralympics.articles.v1.GenerateTokenResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_articles_v1_preview_proto_init() }
func file_articles_v1_preview_proto_init() {
	if File_articles_v1_preview_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_articles_v1_preview_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_articles_v1_preview_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_articles_v1_preview_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_articles_v1_preview_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_articles_v1_preview_proto_goTypes,
		DependencyIndexes: file_articles_v1_preview_proto_depIdxs,
		MessageInfos:      file_articles_v1_preview_proto_msgTypes,
	}.Build()
	File_articles_v1_preview_proto = out.File
	file_articles_v1_preview_proto_rawDesc = nil
	file_articles_v1_preview_proto_goTypes = nil
	file_articles_v1_preview_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PreviewAuthorizerClient is the client API for PreviewAuthorizer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PreviewAuthorizerClient interface {
	// Authorizes a token, if invalid an error will be returned else
	// an empty response
	AuthorizeToken(ctx context.Context, in *AuthorizeTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type previewAuthorizerClient struct {
	cc grpc.ClientConnInterface
}

func NewPreviewAuthorizerClient(cc grpc.ClientConnInterface) PreviewAuthorizerClient {
	return &previewAuthorizerClient{cc}
}

func (c *previewAuthorizerClient) AuthorizeToken(ctx context.Context, in *AuthorizeTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/paralympics.articles.v1.PreviewAuthorizer/AuthorizeToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PreviewAuthorizerServer is the server API for PreviewAuthorizer service.
type PreviewAuthorizerServer interface {
	// Authorizes a token, if invalid an error will be returned else
	// an empty response
	AuthorizeToken(context.Context, *AuthorizeTokenRequest) (*empty.Empty, error)
}

// UnimplementedPreviewAuthorizerServer can be embedded to have forward compatible implementations.
type UnimplementedPreviewAuthorizerServer struct {
}

func (*UnimplementedPreviewAuthorizerServer) AuthorizeToken(context.Context, *AuthorizeTokenRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthorizeToken not implemented")
}

func RegisterPreviewAuthorizerServer(s *grpc.Server, srv PreviewAuthorizerServer) {
	s.RegisterService(&_PreviewAuthorizer_serviceDesc, srv)
}

func _PreviewAuthorizer_AuthorizeToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizeTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreviewAuthorizerServer).AuthorizeToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paralympics.articles.v1.PreviewAuthorizer/AuthorizeToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreviewAuthorizerServer).AuthorizeToken(ctx, req.(*AuthorizeTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PreviewAuthorizer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paralympics.articles.v1.PreviewAuthorizer",
	HandlerType: (*PreviewAuthorizerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthorizeToken",
			Handler:    _PreviewAuthorizer_AuthorizeToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "articles/v1/preview.proto",
}

// PreviewTokenGeneratorClient is the client API for PreviewTokenGenerator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PreviewTokenGeneratorClient interface {
	// Generates an article preview token for a specific article
	GenerateToken(ctx context.Context, in *GenerateTokenRequest, opts ...grpc.CallOption) (*GenerateTokenResponse, error)
}

type previewTokenGeneratorClient struct {
	cc grpc.ClientConnInterface
}

func NewPreviewTokenGeneratorClient(cc grpc.ClientConnInterface) PreviewTokenGeneratorClient {
	return &previewTokenGeneratorClient{cc}
}

func (c *previewTokenGeneratorClient) GenerateToken(ctx context.Context, in *GenerateTokenRequest, opts ...grpc.CallOption) (*GenerateTokenResponse, error) {
	out := new(GenerateTokenResponse)
	err := c.cc.Invoke(ctx, "/paralympics.articles.v1.PreviewTokenGenerator/GenerateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PreviewTokenGeneratorServer is the server API for PreviewTokenGenerator service.
type PreviewTokenGeneratorServer interface {
	// Generates an article preview token for a specific article
	GenerateToken(context.Context, *GenerateTokenRequest) (*GenerateTokenResponse, error)
}

// UnimplementedPreviewTokenGeneratorServer can be embedded to have forward compatible implementations.
type UnimplementedPreviewTokenGeneratorServer struct {
}

func (*UnimplementedPreviewTokenGeneratorServer) GenerateToken(context.Context, *GenerateTokenRequest) (*GenerateTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateToken not implemented")
}

func RegisterPreviewTokenGeneratorServer(s *grpc.Server, srv PreviewTokenGeneratorServer) {
	s.RegisterService(&_PreviewTokenGenerator_serviceDesc, srv)
}

func _PreviewTokenGenerator_GenerateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreviewTokenGeneratorServer).GenerateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paralympics.articles.v1.PreviewTokenGenerator/GenerateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreviewTokenGeneratorServer).GenerateToken(ctx, req.(*GenerateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PreviewTokenGenerator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paralympics.articles.v1.PreviewTokenGenerator",
	HandlerType: (*PreviewTokenGeneratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateToken",
			Handler:    _PreviewTokenGenerator_GenerateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "articles/v1/preview.proto",
}
