// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: donations/v1/donation.proto

package donations

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Response for `Donate` method
type DonateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *DonateResponse) Reset() {
	*x = DonateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_donations_v1_donation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonateResponse) ProtoMessage() {}

func (x *DonateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_donations_v1_donation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonateResponse.ProtoReflect.Descriptor instead.
func (*DonateResponse) Descriptor() ([]byte, []int) {
	return file_donations_v1_donation_proto_rawDescGZIP(), []int{0}
}

func (x *DonateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DonateResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

// A request to make a donation
type Donation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email          string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Amount         int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	BillingAddress *Address `protobuf:"bytes,4,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address,omitempty"`
	Giftaid        bool     `protobuf:"varint,5,opt,name=giftaid,proto3" json:"giftaid,omitempty"`
}

func (x *Donation) Reset() {
	*x = Donation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_donations_v1_donation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Donation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Donation) ProtoMessage() {}

func (x *Donation) ProtoReflect() protoreflect.Message {
	mi := &file_donations_v1_donation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Donation.ProtoReflect.Descriptor instead.
func (*Donation) Descriptor() ([]byte, []int) {
	return file_donations_v1_donation_proto_rawDescGZIP(), []int{1}
}

func (x *Donation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Donation) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Donation) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Donation) GetBillingAddress() *Address {
	if x != nil {
		return x.BillingAddress
	}
	return nil
}

func (x *Donation) GetGiftaid() bool {
	if x != nil {
		return x.Giftaid
	}
	return false
}

// An address for billing
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1      string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	City       string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode string `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Country    string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_donations_v1_donation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_donations_v1_donation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_donations_v1_donation_proto_rawDescGZIP(), []int{2}
}

func (x *Address) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

var File_donations_v1_donation_proto protoreflect.FileDescriptor

var file_donations_v1_donation_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x70,
	0x61, 0x72, 0x61, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x45, 0x0a, 0x0e, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xb2,
	0x01, 0x0a, 0x08, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a,
	0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79, 0x6d,
	0x70, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x69, 0x66,
	0x74, 0x61, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74,
	0x61, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x65, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x32, 0x65, 0x0a, 0x09, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x58, 0x0a, 0x06, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28,
	0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x64, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x6f,
	0x2e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x70, 0x61, 0x2f,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e,
	0x2d, 0x67, 0x6f, 0x2f, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_donations_v1_donation_proto_rawDescOnce sync.Once
	file_donations_v1_donation_proto_rawDescData = file_donations_v1_donation_proto_rawDesc
)

func file_donations_v1_donation_proto_rawDescGZIP() []byte {
	file_donations_v1_donation_proto_rawDescOnce.Do(func() {
		file_donations_v1_donation_proto_rawDescData = protoimpl.X.CompressGZIP(file_donations_v1_donation_proto_rawDescData)
	})
	return file_donations_v1_donation_proto_rawDescData
}

var file_donations_v1_donation_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_donations_v1_donation_proto_goTypes = []interface{}{
	(*DonateResponse)(nil), // 0: paralympics.donations.v1.DonateResponse
	(*Donation)(nil),       // 1: paralympics.donations.v1.Donation
	(*Address)(nil),        // 2: paralympics.donations.v1.Address
}
var file_donations_v1_donation_proto_depIdxs = []int32{
	2, // 0: paralympics.donations.v1.Donation.billing_address:type_name -> paralympics.donations.v1.Address
	1, // 1: paralympics.donations.v1.Donations.Donate:input_type -> paralympics.donations.v1.Donation
	0, // 2: paralympics.donations.v1.Donations.Donate:output_type -> paralympics.donations.v1.DonateResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_donations_v1_donation_proto_init() }
func file_donations_v1_donation_proto_init() {
	if File_donations_v1_donation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_donations_v1_donation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_donations_v1_donation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Donation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_donations_v1_donation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_donations_v1_donation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_donations_v1_donation_proto_goTypes,
		DependencyIndexes: file_donations_v1_donation_proto_depIdxs,
		MessageInfos:      file_donations_v1_donation_proto_msgTypes,
	}.Build()
	File_donations_v1_donation_proto = out.File
	file_donations_v1_donation_proto_rawDesc = nil
	file_donations_v1_donation_proto_goTypes = nil
	file_donations_v1_donation_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DonationsClient is the client API for Donations service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DonationsClient interface {
	// Make a new donation
	Donate(ctx context.Context, in *Donation, opts ...grpc.CallOption) (*DonateResponse, error)
}

type donationsClient struct {
	cc grpc.ClientConnInterface
}

func NewDonationsClient(cc grpc.ClientConnInterface) DonationsClient {
	return &donationsClient{cc}
}

func (c *donationsClient) Donate(ctx context.Context, in *Donation, opts ...grpc.CallOption) (*DonateResponse, error) {
	out := new(DonateResponse)
	err := c.cc.Invoke(ctx, "/paralympics.donations.v1.Donations/Donate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DonationsServer is the server API for Donations service.
type DonationsServer interface {
	// Make a new donation
	Donate(context.Context, *Donation) (*DonateResponse, error)
}

// UnimplementedDonationsServer can be embedded to have forward compatible implementations.
type UnimplementedDonationsServer struct {
}

func (*UnimplementedDonationsServer) Donate(context.Context, *Donation) (*DonateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Donate not implemented")
}

func RegisterDonationsServer(s *grpc.Server, srv DonationsServer) {
	s.RegisterService(&_Donations_serviceDesc, srv)
}

func _Donations_Donate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Donation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DonationsServer).Donate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paralympics.donations.v1.Donations/Donate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DonationsServer).Donate(ctx, req.(*Donation))
	}
	return interceptor(ctx, in, info, handler)
}

var _Donations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paralympics.donations.v1.Donations",
	HandlerType: (*DonationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Donate",
			Handler:    _Donations_Donate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "donations/v1/donation.proto",
}
