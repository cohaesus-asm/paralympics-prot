// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: content/v1/content.proto

package content

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of content in module instance
type Type int32

const (
	Type_TEXT           Type = 0
	Type_IMAGE          Type = 1
	Type_QUOTE          Type = 2
	Type_HIGHLIGHT      Type = 3
	Type_VIDEO          Type = 4
	Type_CLASSIFICATION Type = 5
	Type_ACHIEVEMENT    Type = 6
	Type_PROFILE        Type = 7
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "QUOTE",
		3: "HIGHLIGHT",
		4: "VIDEO",
		5: "CLASSIFICATION",
		6: "ACHIEVEMENT",
		7: "PROFILE",
	}
	Type_value = map[string]int32{
		"TEXT":           0,
		"IMAGE":          1,
		"QUOTE":          2,
		"HIGHLIGHT":      3,
		"VIDEO":          4,
		"CLASSIFICATION": 5,
		"ACHIEVEMENT":    6,
		"PROFILE":        7,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_content_v1_content_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_content_v1_content_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_content_v1_content_proto_rawDescGZIP(), []int{0}
}

// A content module stored in the content service
type ContentModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Order int64  `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Type  Type   `protobuf:"varint,3,opt,name=type,proto3,enum=paralympics.content.v1.Type" json:"type,omitempty"`
	// TEXT
	Text           string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	TextHtml       string `protobuf:"bytes,5,opt,name=text_html,json=textHtml,proto3" json:"text_html,omitempty"`
	ChapterHeading string `protobuf:"bytes,6,opt,name=chapter_heading,json=chapterHeading,proto3" json:"chapter_heading,omitempty"`
	// IMAGE
	Image           *Image `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	ImageAlt        string `protobuf:"bytes,8,opt,name=image_alt,json=imageAlt,proto3" json:"image_alt,omitempty"`
	ImageCaption    string `protobuf:"bytes,9,opt,name=image_caption,json=imageCaption,proto3" json:"image_caption,omitempty"`
	ImageFullScreen bool   `protobuf:"varint,10,opt,name=image_full_screen,json=imageFullScreen,proto3" json:"image_full_screen,omitempty"`
	// QUOTE
	QuoteText   string `protobuf:"bytes,11,opt,name=quote_text,json=quoteText,proto3" json:"quote_text,omitempty"`
	QuoteAuthor string `protobuf:"bytes,12,opt,name=quote_author,json=quoteAuthor,proto3" json:"quote_author,omitempty"`
	// HIGHLIGHT
	HighlightText string `protobuf:"bytes,13,opt,name=highlight_text,json=highlightText,proto3" json:"highlight_text,omitempty"`
	// VIDEO
	VideoUrl     string `protobuf:"bytes,14,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	VideoCaption string `protobuf:"bytes,15,opt,name=video_caption,json=videoCaption,proto3" json:"video_caption,omitempty"`
	VideoCover   *Image `protobuf:"bytes,16,opt,name=video_cover,json=videoCover,proto3" json:"video_cover,omitempty"`
	VideoTitle   string `protobuf:"bytes,17,opt,name=video_title,json=videoTitle,proto3" json:"video_title,omitempty"`
	// CLASSIFICATION
	DropdownTitle string `protobuf:"bytes,18,opt,name=dropdown_title,json=dropdownTitle,proto3" json:"dropdown_title,omitempty"`
	// ACHIEVEMENT
	AchievementGame   string `protobuf:"bytes,19,opt,name=achievement_game,json=achievementGame,proto3" json:"achievement_game,omitempty"`
	AchievementGold   int64  `protobuf:"varint,20,opt,name=achievement_gold,json=achievementGold,proto3" json:"achievement_gold,omitempty"`
	AchievementSilver int64  `protobuf:"varint,21,opt,name=achievement_silver,json=achievementSilver,proto3" json:"achievement_silver,omitempty"`
	AchievementBronze int64  `protobuf:"varint,22,opt,name=achievement_bronze,json=achievementBronze,proto3" json:"achievement_bronze,omitempty"`
	// PROFILE
	Title    string `protobuf:"bytes,23,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle string `protobuf:"bytes,24,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	Link     string `protobuf:"bytes,25,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *ContentModule) Reset() {
	*x = ContentModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_v1_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentModule) ProtoMessage() {}

func (x *ContentModule) ProtoReflect() protoreflect.Message {
	mi := &file_content_v1_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentModule.ProtoReflect.Descriptor instead.
func (*ContentModule) Descriptor() ([]byte, []int) {
	return file_content_v1_content_proto_rawDescGZIP(), []int{0}
}

func (x *ContentModule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContentModule) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ContentModule) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TEXT
}

func (x *ContentModule) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ContentModule) GetTextHtml() string {
	if x != nil {
		return x.TextHtml
	}
	return ""
}

func (x *ContentModule) GetChapterHeading() string {
	if x != nil {
		return x.ChapterHeading
	}
	return ""
}

func (x *ContentModule) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ContentModule) GetImageAlt() string {
	if x != nil {
		return x.ImageAlt
	}
	return ""
}

func (x *ContentModule) GetImageCaption() string {
	if x != nil {
		return x.ImageCaption
	}
	return ""
}

func (x *ContentModule) GetImageFullScreen() bool {
	if x != nil {
		return x.ImageFullScreen
	}
	return false
}

func (x *ContentModule) GetQuoteText() string {
	if x != nil {
		return x.QuoteText
	}
	return ""
}

func (x *ContentModule) GetQuoteAuthor() string {
	if x != nil {
		return x.QuoteAuthor
	}
	return ""
}

func (x *ContentModule) GetHighlightText() string {
	if x != nil {
		return x.HighlightText
	}
	return ""
}

func (x *ContentModule) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *ContentModule) GetVideoCaption() string {
	if x != nil {
		return x.VideoCaption
	}
	return ""
}

func (x *ContentModule) GetVideoCover() *Image {
	if x != nil {
		return x.VideoCover
	}
	return nil
}

func (x *ContentModule) GetVideoTitle() string {
	if x != nil {
		return x.VideoTitle
	}
	return ""
}

func (x *ContentModule) GetDropdownTitle() string {
	if x != nil {
		return x.DropdownTitle
	}
	return ""
}

func (x *ContentModule) GetAchievementGame() string {
	if x != nil {
		return x.AchievementGame
	}
	return ""
}

func (x *ContentModule) GetAchievementGold() int64 {
	if x != nil {
		return x.AchievementGold
	}
	return 0
}

func (x *ContentModule) GetAchievementSilver() int64 {
	if x != nil {
		return x.AchievementSilver
	}
	return 0
}

func (x *ContentModule) GetAchievementBronze() int64 {
	if x != nil {
		return x.AchievementBronze
	}
	return 0
}

func (x *ContentModule) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ContentModule) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *ContentModule) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

// ImageCrop represents crop dimensions
type ImageCrop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width   int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height  int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	OffsetX int64 `protobuf:"varint,3,opt,name=offset_x,json=offsetX,proto3" json:"offset_x,omitempty"`
	OffsetY int64 `protobuf:"varint,4,opt,name=offset_y,json=offsetY,proto3" json:"offset_y,omitempty"`
}

func (x *ImageCrop) Reset() {
	*x = ImageCrop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_v1_content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageCrop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageCrop) ProtoMessage() {}

func (x *ImageCrop) ProtoReflect() protoreflect.Message {
	mi := &file_content_v1_content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageCrop.ProtoReflect.Descriptor instead.
func (*ImageCrop) Descriptor() ([]byte, []int) {
	return file_content_v1_content_proto_rawDescGZIP(), []int{1}
}

func (x *ImageCrop) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageCrop) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageCrop) GetOffsetX() int64 {
	if x != nil {
		return x.OffsetX
	}
	return 0
}

func (x *ImageCrop) GetOffsetY() int64 {
	if x != nil {
		return x.OffsetY
	}
	return 0
}

// Image represents an image with source and crop
type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string     `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Crop   *ImageCrop `protobuf:"bytes,2,opt,name=crop,proto3" json:"crop,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_v1_content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_content_v1_content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_content_v1_content_proto_rawDescGZIP(), []int{2}
}

func (x *Image) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Image) GetCrop() *ImageCrop {
	if x != nil {
		return x.Crop
	}
	return nil
}

var File_content_v1_content_proto protoreflect.FileDescriptor

var file_content_v1_content_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x22, 0x92, 0x07, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c,
	0x79, 0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79, 0x6d, 0x70,
	0x69, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46,
	0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x6f,
	0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6c, 0x76, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x62, 0x72, 0x6f, 0x6e, 0x7a, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x6f, 0x6e, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x6f, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x43, 0x72, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x22, 0x56, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x63, 0x72, 0x6f,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79,
	0x6d, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x72, 0x6f, 0x70, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x70,
	0x2a, 0x72, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x49, 0x47, 0x48,
	0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x48, 0x49, 0x45, 0x56,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x46, 0x49,
	0x4c, 0x45, 0x10, 0x07, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x6f, 0x2e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x70, 0x61, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_content_v1_content_proto_rawDescOnce sync.Once
	file_content_v1_content_proto_rawDescData = file_content_v1_content_proto_rawDesc
)

func file_content_v1_content_proto_rawDescGZIP() []byte {
	file_content_v1_content_proto_rawDescOnce.Do(func() {
		file_content_v1_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_content_v1_content_proto_rawDescData)
	})
	return file_content_v1_content_proto_rawDescData
}

var file_content_v1_content_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_content_v1_content_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_content_v1_content_proto_goTypes = []interface{}{
	(Type)(0),             // 0: paralympics.content.v1.Type
	(*ContentModule)(nil), // 1: paralympics.content.v1.ContentModule
	(*ImageCrop)(nil),     // 2: paralympics.content.v1.ImageCrop
	(*Image)(nil),         // 3: paralympics.content.v1.Image
}
var file_content_v1_content_proto_depIdxs = []int32{
	0, // 0: paralympics.content.v1.ContentModule.type:type_name -> paralympics.content.v1.Type
	3, // 1: paralympics.content.v1.ContentModule.image:type_name -> paralympics.content.v1.Image
	3, // 2: paralympics.content.v1.ContentModule.video_cover:type_name -> paralympics.content.v1.Image
	2, // 3: paralympics.content.v1.Image.crop:type_name -> paralympics.content.v1.ImageCrop
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_content_v1_content_proto_init() }
func file_content_v1_content_proto_init() {
	if File_content_v1_content_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_content_v1_content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_v1_content_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageCrop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_v1_content_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_content_v1_content_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_content_v1_content_proto_goTypes,
		DependencyIndexes: file_content_v1_content_proto_depIdxs,
		EnumInfos:         file_content_v1_content_proto_enumTypes,
		MessageInfos:      file_content_v1_content_proto_msgTypes,
	}.Build()
	File_content_v1_content_proto = out.File
	file_content_v1_content_proto_rawDesc = nil
	file_content_v1_content_proto_goTypes = nil
	file_content_v1_content_proto_depIdxs = nil
}
